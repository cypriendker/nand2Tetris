// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/String.jack

/**
 * Represents a String object. Implements the String type.
 */
class String {

	field Array string;
	field int length, maxL;

    /** Constructs a new empty String with a maximum length of maxLength. */
    constructor String new(int maxLength) {
		if ( maxLength > 0 ){
			let string = Memory.alloc( maxLength );
		}
		let length = 0;
		let maxL = maxLength;
		
		return this;
    }

    /** De-allocates the string and frees its space. */
    method void dispose() {
		if ( maxL > 0 ){
			do Memory.deAlloc( string );
		}
		let length = 0;
		
		return;
    }

    /** Returns the current length of this String. */
    method int length() {
		return length;
    }

    /** Returns the character at location j. */
    method char charAt(int j) {
		return string[j];
    }

    /** Sets the j'th character of this string to be c. */
    method void setCharAt(int j, char c) {
		let string[j] = c;
		
		return;
    }

    /** Appends the character c to the end of this String.
     *  Returns this string as the return value. */
    method String appendChar(char c) {
		let string[length] = c;
		let length = length + 1;
		
		return this;
		
    }

    /** Erases the last character from this String. */
    method void eraseLastChar() {
		let length = length - 1;
		
		return;
    }

    /** Returns the integer value of this String until the first non
     *  numeric character. */
    method int intValue() {
		var int n, i, d;
		var boolean neg;
		
		let n = 0;
		let i = 0;
		let d = charAt( i );
		if ( d = 45 ){
			let neg = true;
			let i = 1;
		} else {
			let neg = false;
		}
		while ( i < length ){
			let d = charAt( i ) - 48;
			let n = 10*n + d;
			let i = i+1;
		}
		if ( neg ){
			return -n;
		} else {
			return n;
		}
    }

	method void setIntPos( int n ){
		var int q;
		var char c;
				
		let q = n/10;
		let c = ( n - ( q * 10 ) ) + 48;
		
		if ( n < 10 ){
			do appendChar( c );
		} else {
			do setIntPos( q );
			do appendChar( c );
		}			
		return ;
	}
	
    /** Sets this String to hold a representation of the given number. */
    method void setInt(int n) {
		var int q;
		var char c;
				
		let length = 0;
		if ( n < 0 ){
			do appendChar( 45 );
			do setIntPos( -n );
		} else {
			do setIntPos( n );		
		}
		return ;
    }

    /** Returns the new line character. */
    function char newLine() {
		return 128;
    }

    /** Returns the backspace character. */
    function char backSpace() {
		return 129;
    }

    /** Returns the double quote (") character. */
    function char doubleQuote() {
		return 34;
    }
}
